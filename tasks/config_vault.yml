---

- name: ensure path for deploy vault exists
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ vault_docker_base_dir }}"
    - "{{ vault_docker_config_dir }}"
    - "{{ vault_docker_init_dir }}"

- name: copy vault config
  template:
    src: "config.hcl.j2"
    dest: "{{ vault_docker_config_dir }}/config.hcl"

- name: copy vault init script
  template:
    src: "vault-init.sh.j2"
    dest: "{{ vault_docker_init_dir }}/vault-init.sh"
    mode: 0740

- name: add network to docker
  docker_network:
    name: "{{ vault_docker_networks }}"

- name: Create a volume
  docker_volume:
    name: "{{ vault_docker_data_vol }}"

- name: deploy vault
  docker_container:
    name: "{{ vault_docker_container_name }}"
    image: "{{ vault_docker_image }}"
    restart_policy: always
    capabilities:
      - IPC_LOCK
    ports:
      - 8200:8200
    volumes:
      - "{{ vault_docker_config_dir }}/config.hcl:/vault/config/config.hcl"
      - "{{ vault_docker_data_vol }}:/vault/file/"
    env:
      VAULT_ADDR: "http://localhost:8200"
    command: server
    networks:
      - name: "{{ vault_docker_networks }}"

- name: additional vault init
  docker_container:
    name: "{{ vault_docker_container_init_name }}"
    image: "{{ vault_docker_image }}"
    restart_policy: on-failure
    volumes:
      - "{{ vault_docker_init_dir }}/vault-root-token:/vault/file/vault-root-token"
      - "{{ vault_docker_init_dir }}/vault-init.sh:/usr/local/bin/vault-init.sh"
      - "{{ vault_docker_data_vol }}:/vault/file/"
    env:
      VAULT_ADDR: "http://vault:8200"
      MY_VAULT_TOKEN: "{{ vault_docker_token }}"
    command: /usr/local/bin/vault-init.sh
    networks:
      - name: "{{ vault_docker_networks }}"